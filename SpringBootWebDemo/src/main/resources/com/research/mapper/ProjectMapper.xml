<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper namespace="com.car.dao.StudentMapper"> -->
<mapper namespace="com.research.mapper.ProjectMapper">


	<resultMap type="com.research.model.Project" id="ProjectResult">
		<id property="id" column="id"/>
		<result property="title" column="title"/>
		<result property="summary" column="summary"/>
		<result property="applicant" column="applicant"/>
		<result property="declareUnits" column="declare_units"/>
		<result property="remark" column="remark"/>
		<result property="declareTime" column="declare_time"/>
		<result property="auditPassTime" column="audit_pass_time"/>
		<result property="auditState" column="audit_state"/>
		<result property="projectFile" column="project_file"/>
		<result property="createdDate" column="created_date"/>
		<result property="lastUpdated" column="last_updated"/>
	</resultMap>

	<insert id="insertProject" parameterType="com.research.model.Project" useGeneratedKeys="true" keyProperty="id">
		<selectKey keyProperty="id" order="AFTER" resultType="int">
			select LAST_INSERT_ID() AS id
		</selectKey>
		INSERT INTO research_project (title, summary, applicant, declare_units, remark, declare_time,
		audit_pass_time, audit_state, project_file,
	  	created_date, last_updated)
		VALUES (#{title},#{summary},#{applicant},#{declareUnits},#{remark},#{declareTime},#{auditPassTime},
		#{auditState}, #{projectFile}, #{createdDate}, #{lastUpdated})
	</insert>

	<delete id="deleteProjectById"  parameterType="com.research.model.Project">
		DELETE FROM research_project
		WHERE id = #{id}
	</delete>

	<update id="updateProjectById" parameterType="com.research.model.Project">
		UPDATE research_project
		SET
		<if test="title != null and '' != title">
			<![CDATA[
               title = #{title},
            ]]>
		</if>
		<if test="summary != null and '' != summary">
			<![CDATA[
               summary = #{summary},
            ]]>
		</if>
		<if test="applicant != null and '' != applicant">
			<![CDATA[
               applicant = #{applicant},
            ]]>
		</if>
		<if test="remark != null and '' != remark">
			<![CDATA[
               remark = #{remark},
            ]]>
		</if>
		<if test="declareTime != null and '' != declareTime">
			<![CDATA[
               declare_time = #{declareTime},
            ]]>
		</if>
		<if test="auditPassTime != null and '' != auditPassTime">
			<![CDATA[
               audit_pass_time = #{auditPassTime},
            ]]>
		</if>
		<if test="auditState != null and '' != auditState">
			<![CDATA[
               audit_state = #{auditState},
            ]]>
		</if>
		<if test="projectFile != null and '' != projectFile">
			<![CDATA[
               project_file = #{projectFile},
            ]]>
		</if>
		last_updated = #{lastUpdated}
		WHERE id = #{id}
	</update>

	<select id="getProjectById" resultMap="ProjectResult">
		SELECT id,title,summary, applicant, declare_units, remark, declare_time, audit_pass_time, audit_state,
		project_file, created_date, last_updated
		FROM research_project
		WHERE id = #{id}
	</select>

	<select id="getProjects" resultMap="ProjectResult">
		SELECT id,title,summary, applicant, declare_units, remark, declare_time, audit_pass_time, audit_state,
		project_file, created_date, last_updated
		FROM research_project
		LIMIT #{pageIndex}, #{pageSize}
	</select>

	<select id="queryProjects" resultMap="ProjectResult">
		SELECT id,title,summary, applicant, declare_units, remark, declare_time, audit_pass_time, audit_state,
		project_file, created_date, last_updated
		FROM research_project
		WHERE 1 = 1
		<if test="state != null and '' != state">
			<![CDATA[
               AND audit_state = #{state}
            ]]>
		</if>
		<if test="date != null and '' != date">
			<![CDATA[
			  AND DATE_FORMAT(created_date, '%Y-%m-%d') > DATE_FORMAT(#{date}, '%Y-%m-%d')
			]]>
		</if>
		ORDER BY created_date
	</select>

	<select id="getProjectCounts">
		SELECT count(1)
		FROM research_project
	</select>

</mapper>